1.- Implemente un programa en ensamblador de MIPS que contenga las siguientes
    funciones y procedimientos:

  - mayor: recibe dos números enteros y devuelve el mayor de ellos

  - print_string: muestra por pantalla la cadena cuya dirección de memoria se
    pasa como parámetro.

  - print_integer: muestra por pantalla el número cuyo valor se
    pasa como parámetro.

  - print_char: muestra por pantalla el carácter cuyo código ASCII se pasa como
    parámetro.

  - read_integer: lee un número entero por teclado y lo devuelve como resultado.

  Usando las funciones anteriores, la función main de nuestro programa debe
  entrar en un bucle donde se pidan 10 números y, al final, muestre el mayor de
  todos ellos. A continuación se muestra un ejemplo de ejecución:

  Introduce 10 números enteros:
  1: -34
  2: 134
  3: 834
  4: -562
  5: 341
  6: 623
  7: 621
  8: 891
  9: 15
  10: -3411
  El mayor de los números introducidos es 891


2.- Implemente un programa en ensamblador de MIPS que contenga las siguientes
    funciones y procedimientos:

  - cubo: recibe un número y devuelve el resultado de elevar dicho número a 3.

  - raizcubica: devuelve la parte entera de la raíz cúbica del número entero
    positivo pasado como parámetro. Para implementar esta función, traduce la
    siguiente función en C (observa que se utiliza la función cubo anterior):

int raizcubica(int n) {
  int r = 0;
  int potencia=cubo(r);
  while (potencia < n) {
    r++;
    potencia=cubo(r);
  }
  if (potencia > n)
    return r-1;
  return r;
}

  - print_string: muestra por pantalla la cadena cuya dirección de memoria se
    pasa como parámetro.

  - print_integer: muestra por pantalla el número cuyo valor se
    pasa como parámetro.

  - print_char: muestra por pantalla el carácter cuyo código ASCII se pasa como
    parámetro.

  - read_integer: lee un número entero por teclado y lo devuelve como resultado.

  Usando las funciones anteriores, la función main de nuestro programa debe
  pedir un número entero y devolver la parte entera de la raíz cúbica de dicho
  número. A continuación se muestra un ejemplo de ejecución:

Introduce un número: 30
La parte entera de la raíz cúbica del número introducido es: 3


3.- Implemente un programa en ensamblador de MIPS que contenga las siguientes
funciones y procedimientos:

  - mayor: recibe dos números enteros y devuelve el mayor de ellos.

  - minimocomunmultiplo: recibe dos números enteros positivos (mayores que 0) y
    devuelve el mínimo común múltiplo de ambos. Para implementar esta función,
    traduce la siguiente función en C (observa que se utiliza la función mayor
    anterior):

int minimocomunmultiplo(int x, int y) {
  int mcm = mayor(x, y);
  int limite = x * y;
  int salir = 0;

  while ((salir == 0) && (mcm < limite)) {
          if ((mcm % x) != 0) {
            mcm++;
          } else if ((mcm % y) != 0) {
            mcm++;
          } else {
            salir=1;
          }
  }
  return mcm;
}

  - print_string: muestra por pantalla la cadena cuya dirección de memoria se
    pasa como parámetro.

  - print_integer: muestra por pantalla el número entero cuyo valor se
    pasa como parámetro.

  - print_char: muestra por pantalla el carácter cuyo código ASCII se pasa como
    parámetro.

  - read_integer: lee un número entero por teclado y lo devuelve como resultado.

  Usando las funciones anteriores, la función main de nuestro programa debe
  pedir dos números y mostrar el mínimo común múltiplo de ambos. A continuación
  se muestra un ejemplo de ejecución:

Introduce el primer número: 9
Introduce el segundo número: 15
El MCM de 9 y 15 es 45

