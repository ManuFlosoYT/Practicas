# -*- coding: UTF-8 -*-


# This file was *autogenerated* from the file pythontex-files-tarea06/sage_default_default.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_9 = Integer(9)


import os
import sys
import codecs

if '--interactive' not in sys.argv[_sage_const_1 :]:
    if sys.version_info[_sage_const_0 ] == _sage_const_2 :
        sys.stdout = codecs.getwriter('UTF-8')(sys.stdout, 'strict')
        sys.stderr = codecs.getwriter('UTF-8')(sys.stderr, 'strict')
    else:
        sys.stdout = codecs.getwriter('UTF-8')(sys.stdout.buffer, 'strict')
        sys.stderr = codecs.getwriter('UTF-8')(sys.stderr.buffer, 'strict')

if '/usr/share/texlive/texmf-dist/scripts/pythontex' and '/usr/share/texlive/texmf-dist/scripts/pythontex' not in sys.path:
    sys.path.append('/usr/share/texlive/texmf-dist/scripts/pythontex')
from pythontex_utils import PythonTeXUtils
pytex = PythonTeXUtils()

pytex.docdir = os.getcwd()
if os.path.isdir('.'):
    os.chdir('.')
    if os.getcwd() not in sys.path:
        sys.path.append(os.getcwd())
else:
    if len(sys.argv) < _sage_const_2  or sys.argv[_sage_const_1 ] != '--manual':
        sys.exit('Cannot find directory .')
if pytex.docdir not in sys.path:
    sys.path.append(pytex.docdir)

pytex.formatter = latex


pytex.id = 'sage_default_default'
pytex.family = 'sage'
pytex.session = 'default'
pytex.restart = 'default'

pytex.command = 'block'
pytex.set_context('')
pytex.args = ''
pytex.instance = '0'
pytex.line = '51'

print('=>PYTHONTEX:STDOUT#0#block#')
sys.stderr.write('=>PYTHONTEX:STDERR#0#block#\n')
pytex.before()
MBpB = matrix(QQ, [[-_sage_const_2 , _sage_const_2 ], [-_sage_const_1 , _sage_const_1 ]])
Bp = matrix(QQ, [[_sage_const_6 , -_sage_const_5 ], [_sage_const_5 , -_sage_const_4 ]])
B = matrix(QQ, [[-_sage_const_1 , -_sage_const_5 ], [_sage_const_2 , _sage_const_9 ]])
BpB = Bp * B
Bi = B.inverse()
M = Bi * BpB * Bp
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '1'
pytex.line = '60'

print('=>PYTHONTEX:STDOUT#1#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#1#i#\n')
pytex.before()
print(pytex.formatter(Bp))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '2'
pytex.line = '60'

print('=>PYTHONTEX:STDOUT#2#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#2#i#\n')
pytex.before()
print(pytex.formatter(B))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '3'
pytex.line = '60'

print('=>PYTHONTEX:STDOUT#3#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#3#i#\n')
pytex.before()
print(pytex.formatter(BpB))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '4'
pytex.line = '62'

print('=>PYTHONTEX:STDOUT#4#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#4#i#\n')
pytex.before()
print(pytex.formatter(B))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '5'
pytex.line = '62'

print('=>PYTHONTEX:STDOUT#5#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#5#i#\n')
pytex.before()
print(pytex.formatter(Bi))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '6'
pytex.line = '64'

print('=>PYTHONTEX:STDOUT#6#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#6#i#\n')
pytex.before()
print(pytex.formatter(Bi))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '7'
pytex.line = '64'

print('=>PYTHONTEX:STDOUT#7#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#7#i#\n')
pytex.before()
print(pytex.formatter(Bp))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '8'
pytex.line = '64'

print('=>PYTHONTEX:STDOUT#8#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#8#i#\n')
pytex.before()
print(pytex.formatter(B))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '9'
pytex.line = '64'

print('=>PYTHONTEX:STDOUT#9#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#9#i#\n')
pytex.before()
print(pytex.formatter(Bp))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '10'
pytex.line = '64'

print('=>PYTHONTEX:STDOUT#10#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#10#i#\n')
pytex.before()
print(pytex.formatter(M))
pytex.after()


pytex.cleanup()

