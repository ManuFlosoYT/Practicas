=>PYTHONTEX#sage#default#default#0#code#####29#
latex.matrix_delimiters("[", "]")
=>PYTHONTEX#sage#default#default#1#sub#####40#
\begin{center}
\tdplotsetmaincoords{70}{110}
\begin{tikzpicture}[scale = 2, tdplot_main_coords,
  cara/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20}]
\draw[->,thick,gray] (-2.5,0,0) -- (2.5,0,0); % Eje X
\draw[->,thick,gray] (0,-2.5,0) -- (0,2.5,0); % Eje Y
\draw[->,thick,gray] (0,0,-2.5) -- (0,0,2.5); % Eje Z
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#2#block#####65#
r1=vector(RR,[2,2,-1])
r2=vector(RR,[1,-1,3])
v1 = r1.cross_product(r2)
v2 = r1
v3 = v1.cross_product(v2)
u1 = v1/v1.norm()
u2 = v2/v2.norm()
u3 = v3/v3.norm()
=>PYTHONTEX#sage#default#default#3#i#####81#
det(matrix([u1,u2,u3]))
=>PYTHONTEX#sage#default#default#4#block#####83#
A = -2*u2 + -2*u3
B = -2*u2 + +2*u3
C = +2*u2 + +2*u3
D = +2*u2 + -2*u3
=>PYTHONTEX#sage#default#default#5#sub#####92#
\begin{center}
\tdplotsetmaincoords{70}{110}
\begin{tikzpicture}[scale = 2, tdplot_main_coords,
  cara/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20}]
\draw[->,thick,gray] (-2.5,0,0) -- (2.5,0,0); % Eje X
\draw[->,thick,gray] (0,-2.5,0) -- (0,2.5,0); % Eje Y
\draw[->,thick,gray] (0,0,-2.5) -- (0,0,2.5); % Eje Z
\node at !{1.2*u1} {$u_1$};
\node at !{1.2*u2} {$u_2$};
\node at !{1.2*u3} {$u_3$};
\draw[->,very thick] (0,0,0) -- !{u1};
\draw[->,very thick] (0,0,0) -- !{u2};
\draw[->,very thick] (0,0,0) -- !{u3};
\draw[cara] !{A} -- !{B} -- !{C} -- !{D} -- cycle;
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#6#block#####113#
v1=vector(RR,[2,0,-1])
v2=vector(RR,[0,2,0])
v3 = v1.cross_product(v2)
u1 = v1/v1.norm()
u2 = v2/v2.norm()
u3 = v3/v3.norm()
=>PYTHONTEX#sage#default#default#7#i#####125#
det(matrix([u1,u2,u3]))
=>PYTHONTEX#sage#default#default#8#block#####127#
A = -2*u2 + -2*u3
B = -2*u2 + +2*u3
C = +2*u2 + +2*u3
D = +2*u2 + -2*u3
=>PYTHONTEX#sage#default#default#9#sub#####136#
\begin{center}
\tdplotsetmaincoords{70}{110}
\begin{tikzpicture}[scale = 2, tdplot_main_coords,
  cara/.style={thick, color = blue, fill opacity = 0.3, fill = blue!20}]
\draw[->,thick,gray] (-2.5,0,0) -- (2.5,0,0); % Eje X
\draw[->,thick,gray] (0,-2.5,0) -- (0,2.5,0); % Eje Y
\draw[->,thick,gray] (0,0,-2.5) -- (0,0,2.5); % Eje Z
\node at !{1.2*u1} {$u_1$};
\node at !{1.2*u2} {$u_2$};
\node at !{1.2*u3} {$u_3$};
\draw[->,very thick] (0,0,0) -- !{u1};
\draw[->,very thick] (0,0,0) -- !{u2};
\draw[->,very thick] (0,0,0) -- !{u3};
\draw[cara] !{A} -- !{B} -- !{C} -- !{D} -- cycle;
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#10#block#####161#
H=matrix(QQ,[[-1,-1,1,0,2],[2,0,1,1,0]])
=>PYTHONTEX#sage#default#default#11#i#####165#
H
=>PYTHONTEX#sage#default#default#12#block#####174#
H=matrix(QQ,[[-1,-1,1,0,2],[2,0,1,1,0]])
HT1 = block_matrix([[H.T,1]])
HT1R = copy(HT1.echelon_form())
HT1R.subdivide(2,2)
B = HT1R.subdivision(1,1).T
=>PYTHONTEX#sage#default#default#13#i#####181#
HT1
=>PYTHONTEX#sage#default#default#14#i#####181#
HT1R
=>PYTHONTEX#sage#default#default#15#i#####185#
B
=>PYTHONTEX#sage#default#default#16#i#####185#
B.echelon_form()
=>PYTHONTEX#sage#default#default#17#i#####188#
matrix([B.column(0)]).T
=>PYTHONTEX#sage#default#default#18#i#####188#
matrix([B.column(1)]).T
=>PYTHONTEX#sage#default#default#19#i#####188#
matrix([B.column(2)]).T
=>PYTHONTEX#sage#default#default#20#block#####190#
v1 = B.column(0)
v2 = B.column(1)
v3 = B.column(2)
w1 = v1
w2 = v2 - ((v2*w1)/(w1*w1)) * w1
w3 = v3 - ((v3*w2)/(w2*w2)) * w2 - ((v3*w1)/(w1*w1)) * w1
=>PYTHONTEX#sage#default#default#21#i#####199#
matrix([B.column(0)]).T
=>PYTHONTEX#sage#default#default#22#i#####200#
matrix([w2]).T
=>PYTHONTEX#sage#default#default#23#i#####201#
matrix([w3]).T
=>PYTHONTEX#sage#default#default#24#block#####204#
u1 = w1/w1.norm()
u2 = w2/w2.norm()
u3 = w3/w3.norm()
B2 = column_matrix([u1,u2,u3])
=>PYTHONTEX#sage#default#default#25#i#####215#
B2
=>PYTHONTEX#sage#default#default#26#i#####215#
B2.echelon_form()
=>PYTHONTEX#sage#default#default#27#block#####221#
XY = matrix(RR,[[ 0.9791609077659043 ,  -0.430715356970999 ],
                [ 1.5250083079649113 ,  0.061165657369748695 ],
                [ 2.7989027102112827 ,  -0.5015548718775755 ],
                [ 1.912158417289881 ,  0.24440901271557722 ],
                [ 0.8205530309864537 ,  -0.42261180235811696 ],
                [ 1.914008178794904 ,  -0.17482280182386326 ],
                [ 3.0850261801730925 ,  -1.0104522969296543 ],
                [ 0.15356067616723457 ,  -1.7711019287922931 ],
                [ 2.0952887890653016 ,  0.03975209722972092 ],
                [ 2.514022662217597 ,  -0.6049726172196987 ]])

X = XY.column(0)
Y = XY.column(1)
=>PYTHONTEX#sage#default#default#28#sub#####239#
\begin{center}
\begin{tikzpicture}
\foreach \p in !{set(XY.rows())}
  \filldraw[blue] \p circle (0.05);
\draw[->] (!{min(X)-2},0)--(!{max(X)+2},0) node[right]{$x$};
\draw[->] (0,!{min(Y)-2})--(0,!{max(Y)+2}) node[above]{$y$};
\end{tikzpicture}
\end{center}
=>PYTHONTEX#sage#default#default#29#block#####256#
B = matrix([[1 for x in X],
          [x for x in X],
          [x^2 for x in X]]).T
C = (B.T*B)^-1*B.T*Y
=>PYTHONTEX#sage#default#default#30#i#####264#
B
=>PYTHONTEX#sage#default#default#31#i#####267#
C
=>PYTHONTEX#sage#default#default#32#sub#####271#
\begin{center}
\begin{tikzpicture}
\foreach \p in !{set(XY.rows())}
  \filldraw[blue] \p circle (0.05);
\draw[red, domain = !{min(X)-.2}:!{max(X)+.2}, very thick]
 plot(\x,{!{C[0]}+!{C[1]}*\x+!{C[2]}*\x*\x});
\draw[->] (!{min(X)-2},0)--(!{max(X)+2},0) node[right]{$x$};
\draw[->] (0,!{min(Y)-2})--(0,!{max(Y)+2}) node[above]{$y$};
\end{tikzpicture}
\end{center}
=>PYTHONTEX:SETTINGS#
version=0.18
outputdir=pythontex-files-Tarea09
workingdir=.
workingdirset=false
gobble=none
rerun=default
hashdependencies=default
makestderr=false
stderrfilename=full
keeptemps=none
pyfuture=default
pyconfuture=none
pygments=true
pygglobal=:GLOBAL||
fvextfile=-1
pyconbanner=none
pyconfilename=stdin
depythontex=false
pygfamily=py|python3|
pygfamily=pycon|pycon|
pygfamily=sympy|python3|
pygfamily=sympycon|pycon|
pygfamily=pylab|python3|
pygfamily=pylabcon|pycon|
pygfamily=sage|sage|
