# -*- coding: UTF-8 -*-


# This file was *autogenerated* from the file pythontex-files-tarea03/sage_default_default.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_15 = Integer(15); _sage_const_125 = Integer(125); _sage_const_25 = Integer(25); _sage_const_64 = Integer(64); _sage_const_3 = Integer(3); _sage_const_16 = Integer(16)


import os
import sys
import codecs

if '--interactive' not in sys.argv[_sage_const_1 :]:
    if sys.version_info[_sage_const_0 ] == _sage_const_2 :
        sys.stdout = codecs.getwriter('UTF-8')(sys.stdout, 'strict')
        sys.stderr = codecs.getwriter('UTF-8')(sys.stderr, 'strict')
    else:
        sys.stdout = codecs.getwriter('UTF-8')(sys.stdout.buffer, 'strict')
        sys.stderr = codecs.getwriter('UTF-8')(sys.stderr.buffer, 'strict')

if '/usr/share/texlive/texmf-dist/scripts/pythontex' and '/usr/share/texlive/texmf-dist/scripts/pythontex' not in sys.path:
    sys.path.append('/usr/share/texlive/texmf-dist/scripts/pythontex')
from pythontex_utils import PythonTeXUtils
pytex = PythonTeXUtils()

pytex.docdir = os.getcwd()
if os.path.isdir('.'):
    os.chdir('.')
    if os.getcwd() not in sys.path:
        sys.path.append(os.getcwd())
else:
    if len(sys.argv) < _sage_const_2  or sys.argv[_sage_const_1 ] != '--manual':
        sys.exit('Cannot find directory .')
if pytex.docdir not in sys.path:
    sys.path.append(pytex.docdir)

pytex.formatter = latex


pytex.id = 'sage_default_default'
pytex.family = 'sage'
pytex.session = 'default'
pytex.restart = 'default'

pytex.command = 'block'
pytex.set_context('')
pytex.args = ''
pytex.instance = '0'
pytex.line = '30'

print('=>PYTHONTEX:STDOUT#0#block#')
sys.stderr.write('=>PYTHONTEX:STDERR#0#block#\n')
pytex.before()
A = column_matrix(ZZ, [_sage_const_15 , _sage_const_125 ])
B = matrix(ZZ, [[_sage_const_1 , _sage_const_0 ], [_sage_const_0 , _sage_const_1 ]])
AB = block_matrix([ [A, B] ])
ABr = AB.echelon_form()

C = column_matrix(ZZ, [-_sage_const_25 , _sage_const_64 ])
D = matrix(ZZ, [[_sage_const_1 , _sage_const_0 ], [_sage_const_0 , _sage_const_1 ]])
CD = block_matrix([ [C, D] ])
CDr = CD.echelon_form()
CDr2 = CDr[:, _sage_const_1 :_sage_const_3 ]
CDr2t = CDr2.T
Pol = ZZ['t']; (t,) = Pol._first_ngens(1)
E = column_matrix(Pol,[_sage_const_16  ,t])
D = CDr2t * E
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '1'
pytex.line = '54'

print('=>PYTHONTEX:STDOUT#1#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#1#i#\n')
pytex.before()
print(pytex.formatter(AB))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '2'
pytex.line = '54'

print('=>PYTHONTEX:STDOUT#2#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#2#i#\n')
pytex.before()
print(pytex.formatter(ABr))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '3'
pytex.line = '87'

print('=>PYTHONTEX:STDOUT#3#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#3#i#\n')
pytex.before()
print(pytex.formatter(CD))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '4'
pytex.line = '87'

print('=>PYTHONTEX:STDOUT#4#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#4#i#\n')
pytex.before()
print(pytex.formatter(CDr))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '5'
pytex.line = '91'

print('=>PYTHONTEX:STDOUT#5#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#5#i#\n')
pytex.before()
print(pytex.formatter(CDr2t))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '6'
pytex.line = '91'

print('=>PYTHONTEX:STDOUT#6#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#6#i#\n')
pytex.before()
print(pytex.formatter(E))
pytex.after()
pytex.command = 'i'
pytex.set_context('')
pytex.args = ''
pytex.instance = '7'
pytex.line = '91'

print('=>PYTHONTEX:STDOUT#7#i#')
sys.stderr.write('=>PYTHONTEX:STDERR#7#i#\n')
pytex.before()
print(pytex.formatter(D))
pytex.after()


pytex.cleanup()

